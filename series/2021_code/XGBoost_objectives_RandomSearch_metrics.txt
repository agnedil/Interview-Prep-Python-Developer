#### CLASSIFIER / REGRESSOR METRICS


#### XGBOOST

REGRESSION
reg:squarederror: regression with squared loss.
reg:squaredlogerror: regression with squared log loss 12[log(pred+1)−log(label+1)]2. All input labels are required to be greater than -1. Also, see metric rmsle for possible issue with this objective.
reg:pseudohubererror: regression with Pseudo Huber loss, a twice differentiable alternative to absolute loss.
count:poisson: poisson regression for count data, output mean of poisson distribution; max_delta_step is set to 0.7 by default in poisson regression (used to safeguard optimization)
reg:gamma: gamma regression with log-link. Output is a mean of gamma distribution. It might be useful, e.g., for modeling insurance claims severity, or for any outcome that might be gamma-distributed.
reg:tweedie: Tweedie regression with log-link. It might be useful, e.g., for modeling total loss in insurance, or for any outcome that might be Tweedie-distributed.

BINARY
reg:logistic: logistic regression (decision)
binary:logistic: logistic regression for binary classification (probabilities)
binary:logitraw: logistic regression for binary classification (before logistic transformation)
binary:hinge:    hinge loss for binary classification

MULTICLASS
multi:softmax: multiclass classification (set num_class)
multi:softprob: predicted probability of each data point belonging to each class.
rank:pairwise: LambdaMART to perform pairwise ranking (pairwise loss is minimized)
rank:ndcg:     LambdaMART to perform list-wise ranking (Normalized Discounted Cumulative Gain (NDCG) is maximized)
rank:map:      LambdaMART to perform list-wise ranking where Mean Average Precision (MAP) is maximized


#### RANDOMSEARCHCV (scoring='metric' OR scoring=['metric1', 'metric2'])

REGRESSION
‘explained_variance’                  metrics.explained_variance_score
‘max_error’                           metrics.max_error
‘neg_mean_absolute_error’             metrics.mean_absolute_error
‘neg_mean_squared_error’              metrics.mean_squared_error
‘neg_root_mean_squared_error’         metrics.mean_squared_error
‘neg_mean_squared_log_error’          metrics.mean_squared_log_error
‘neg_median_absolute_error’           metrics.median_absolute_error
‘r2’                                  metrics.r2_score
‘neg_mean_poisson_deviance’           metrics.mean_poisson_deviance
‘neg_mean_gamma_deviance’             metrics.mean_gamma_deviance
‘neg_mean_absolute_percentage_error’  metrics.mean_absolute_percentage_error
